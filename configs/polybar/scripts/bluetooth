#!/bin/sh

# displays information about the current bluetooth connection
# if there are several connections
# then one is selected in the following order:
# 1) sending file, newest process
# 2) audio headset
# 3) device, first in the list
#
# can toggle bluetooth and auto connect to paired devices
# to change icon font use --format with your font number
#
# device names, configured using the bluetoothctl set-alias feature
#
# obex:
# CHANNEL <- sdptool search --bdaddr MAC_ADDR OPUSH
# obexftp -S -H -U none -b MAC_ADDR -B CHANNEL -p /path/to/put

_status=$(bluetoothctl show | awk '/Powered/ {printf $2}')

bluetooth_print() {
    if [ "$_status" = "yes" ]; then
        _icon=''
        _label="$_icon"
        
        _obex_pid=$(pgrep -f obexftp -n)
        
        if [ -n "$_obex_pid" ]; then
            set -- $(ps -p "$_obex_pid" -o args --no-headers | awk 'match ($0, /([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})/) {printf substr($0, RSTART, RLENGTH)}')
        else
            set -- $(bluetoothctl devices Connected | awk '{print $2}')
        fi
        
        for _device in "$@"; do
            _info=$(bluetoothctl info "$_device")
            _type=$(echo "$_info" | awk '/Icon/ {printf $2}')
            _name=$(echo "$_info" | awk '/Alias/ {for (i=2; i<NF; i++) printf $i " "; print $NF}')
            
            case $_type in
                audio*)
                    _icon=''
                    _battery=$(echo "$_info" | awk '/Battery/ {gsub(/[()]/,"",$4); printf $4}')
                    if [ -z "$_battery" ]; then
                        _label="$_icon $_name"
                    else
                        _label="$_icon $_name, $_battery%"
                    fi
                    break
                    ;;
                *)
                    if [ -n "$_obex_pid" ]; then
                        _icon=''
                        _label="$_icon $_name"
                    elif [ -z "$(echo "$_label" | cut -b 4-)" ]; then
                        _icon=''
                        _label="$_icon $_name"
                    fi
                    ;;
            esac
        done
        echo "$_label"
    else
        echo ""
    fi
}

bluetooth_format() {
    _output=$(bluetooth_print)
    echo "%{T$1}$(echo "$_output" | cut -b -4)%{T-}$(echo "$_output" | cut -b 5-)"
}

bluetooth_toggle() {
    if [ "$_status" = "yes" ]; then
        set -- $(bluetoothctl devices Connected | awk '{print $2}')
        for _device in "$@"; do
            bluetoothctl disconnect "$_device" > /dev/null
        done
        bluetoothctl power off > /dev/null
    else
        bluetoothctl power on > /dev/null
        sleep 1
        set -- $(bluetoothctl devices Paired | awk '{print $2}')
        for _device in "$@"; do
            bluetoothctl connect "$_device" > /dev/null
        done
    fi
}

case $1 in
    --format)    bluetooth_format "$2" ;;
    --toggle)    bluetooth_toggle ;;
    *)           bluetooth_print ;;
esac
